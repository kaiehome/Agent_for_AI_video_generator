{"ast":null,"code":"import axios from \"axios\";\nexport async function getImageStyles() {\n  const res = await axios.get(\"/available_image_styles\");\n  return res.data.available_styles || [];\n}\nexport async function getTTSVoices() {\n  const res = await axios.get(\"/available_tts_voices\");\n  return res.data.voices || [];\n}\nexport async function submitScript({\n  script,\n  style,\n  voice,\n  subtitleFile,\n  coverImage,\n  overlays,\n  size,\n  use_ai_storyboard\n}) {\n  const formData = new FormData();\n  const blob = new Blob([script], {\n    type: \"text/plain\"\n  });\n  formData.append(\"file\", blob, \"script.txt\");\n  if (style) formData.append(\"style\", style);\n  if (voice) formData.append(\"voice\", voice);\n  if (subtitleFile) formData.append(\"subtitle_file\", subtitleFile);\n  if (coverImage) formData.append(\"cover_image\", coverImage);\n  if (overlays && overlays.length > 0) {\n    overlays.forEach((o, i) => {\n      if (o.image) {\n        formData.append(`overlay_${i}_image`, o.image);\n        formData.append(`overlay_${i}_meta`, JSON.stringify({\n          start: o.start,\n          end: o.end,\n          position: o.position\n        }));\n      }\n    });\n    formData.append(\"overlay_count\", overlays.length);\n  }\n  if (size) formData.append(\"size\", size);\n  if (typeof use_ai_storyboard !== 'undefined') formData.append(\"use_ai_storyboard\", use_ai_storyboard);\n  const res = await axios.post(\"/generate_video_from_script_async\", formData);\n  return res.data.job_id;\n}\nexport async function getJobStatus(jobId) {\n  const res = await axios.get(`/result/${jobId}`);\n  return res.data;\n}","map":{"version":3,"names":["axios","getImageStyles","res","get","data","available_styles","getTTSVoices","voices","submitScript","script","style","voice","subtitleFile","coverImage","overlays","size","use_ai_storyboard","formData","FormData","blob","Blob","type","append","length","forEach","o","i","image","JSON","stringify","start","end","position","post","job_id","getJobStatus","jobId"],"sources":["/Users/wangkai/Documents/GitHub/video_agent/video_agent_full/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nexport async function getImageStyles() {\n  const res = await axios.get(\"/available_image_styles\");\n  return res.data.available_styles || [];\n}\n\nexport async function getTTSVoices() {\n  const res = await axios.get(\"/available_tts_voices\");\n  return res.data.voices || [];\n}\n\nexport async function submitScript({ script, style, voice, subtitleFile, coverImage, overlays, size, use_ai_storyboard }) {\n  const formData = new FormData();\n  const blob = new Blob([script], { type: \"text/plain\" });\n  formData.append(\"file\", blob, \"script.txt\");\n  if (style) formData.append(\"style\", style);\n  if (voice) formData.append(\"voice\", voice);\n  if (subtitleFile) formData.append(\"subtitle_file\", subtitleFile);\n  if (coverImage) formData.append(\"cover_image\", coverImage);\n  if (overlays && overlays.length > 0) {\n    overlays.forEach((o, i) => {\n      if (o.image) {\n        formData.append(`overlay_${i}_image`, o.image);\n        formData.append(`overlay_${i}_meta`, JSON.stringify({\n          start: o.start,\n          end: o.end,\n          position: o.position\n        }));\n      }\n    });\n    formData.append(\"overlay_count\", overlays.length);\n  }\n  if (size) formData.append(\"size\", size);\n  if (typeof use_ai_storyboard !== 'undefined') formData.append(\"use_ai_storyboard\", use_ai_storyboard);\n  const res = await axios.post(\"/generate_video_from_script_async\", formData);\n  return res.data.job_id;\n}\n\nexport async function getJobStatus(jobId) {\n  const res = await axios.get(`/result/${jobId}`);\n  return res.data;\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC,MAAMC,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,yBAAyB,CAAC;EACtD,OAAOD,GAAG,CAACE,IAAI,CAACC,gBAAgB,IAAI,EAAE;AACxC;AAEA,OAAO,eAAeC,YAAYA,CAAA,EAAG;EACnC,MAAMJ,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,uBAAuB,CAAC;EACpD,OAAOD,GAAG,CAACE,IAAI,CAACG,MAAM,IAAI,EAAE;AAC9B;AAEA,OAAO,eAAeC,YAAYA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,KAAK;EAAEC,YAAY;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAkB,CAAC,EAAE;EACxH,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACX,MAAM,CAAC,EAAE;IAAEY,IAAI,EAAE;EAAa,CAAC,CAAC;EACvDJ,QAAQ,CAACK,MAAM,CAAC,MAAM,EAAEH,IAAI,EAAE,YAAY,CAAC;EAC3C,IAAIT,KAAK,EAAEO,QAAQ,CAACK,MAAM,CAAC,OAAO,EAAEZ,KAAK,CAAC;EAC1C,IAAIC,KAAK,EAAEM,QAAQ,CAACK,MAAM,CAAC,OAAO,EAAEX,KAAK,CAAC;EAC1C,IAAIC,YAAY,EAAEK,QAAQ,CAACK,MAAM,CAAC,eAAe,EAAEV,YAAY,CAAC;EAChE,IAAIC,UAAU,EAAEI,QAAQ,CAACK,MAAM,CAAC,aAAa,EAAET,UAAU,CAAC;EAC1D,IAAIC,QAAQ,IAAIA,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAE;IACnCT,QAAQ,CAACU,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACzB,IAAID,CAAC,CAACE,KAAK,EAAE;QACXV,QAAQ,CAACK,MAAM,CAAC,WAAWI,CAAC,QAAQ,EAAED,CAAC,CAACE,KAAK,CAAC;QAC9CV,QAAQ,CAACK,MAAM,CAAC,WAAWI,CAAC,OAAO,EAAEE,IAAI,CAACC,SAAS,CAAC;UAClDC,KAAK,EAAEL,CAAC,CAACK,KAAK;UACdC,GAAG,EAAEN,CAAC,CAACM,GAAG;UACVC,QAAQ,EAAEP,CAAC,CAACO;QACd,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC;IACFf,QAAQ,CAACK,MAAM,CAAC,eAAe,EAAER,QAAQ,CAACS,MAAM,CAAC;EACnD;EACA,IAAIR,IAAI,EAAEE,QAAQ,CAACK,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;EACvC,IAAI,OAAOC,iBAAiB,KAAK,WAAW,EAAEC,QAAQ,CAACK,MAAM,CAAC,mBAAmB,EAAEN,iBAAiB,CAAC;EACrG,MAAMd,GAAG,GAAG,MAAMF,KAAK,CAACiC,IAAI,CAAC,mCAAmC,EAAEhB,QAAQ,CAAC;EAC3E,OAAOf,GAAG,CAACE,IAAI,CAAC8B,MAAM;AACxB;AAEA,OAAO,eAAeC,YAAYA,CAACC,KAAK,EAAE;EACxC,MAAMlC,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,WAAWiC,KAAK,EAAE,CAAC;EAC/C,OAAOlC,GAAG,CAACE,IAAI;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}